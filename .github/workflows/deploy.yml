name: Deploy to AWS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: terraform init -input=false
        working-directory: terraform

      - name: Terraform Validate
        run: terraform validate
        working-directory: terraform

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: terraform

      - name: Get Terraform Output
        id: terraform-output
        run: |
          # Get raw output and extract just the IP address
          RAW_OUTPUT=$(terraform output -raw public_ip)
          echo "Raw output: $RAW_OUTPUT"
          
          # Extract just the IP address using grep
          EC2_IP=$(echo "$RAW_OUTPUT" | grep -oE '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | head -1)
          
          if [ -z "$EC2_IP" ]; then
            echo "ERROR: Could not extract valid IP address from Terraform output"
            echo "Full output was: $RAW_OUTPUT"
            exit 1
          fi
          
          echo "Extracted IP: $EC2_IP"
          echo "EC2_IP=$EC2_IP" >> $GITHUB_ENV
          echo "$EC2_IP" > ec2_ip.txt
        working-directory: terraform

      - name: Debug Files
        run: |
          echo "Current directory: $(pwd)"
          echo "Files in workspace:"
          ls -la
          echo "IP file contents:"
          cat ec2_ip.txt || echo "No ec2_ip.txt found"
        
      - name: Wait for EC2 Instance to be Ready
        run: sleep 30

      - name: Setup SSH Private Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          IP=$(cat ec2_ip.txt)
          echo "Adding SSH key for IP: $IP"
          ssh-keyscan -H "$IP" >> ~/.ssh/known_hosts

      - name: SSH into EC2 and Deploy Ansible Playbook
        run: |
          IP=$(cat ec2_ip.txt)
          echo "Using IP Address: $IP"
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ubuntu@"$IP" << 'EOF'
            sudo apt update -y
            sudo apt install -y ansible docker.io
            sudo systemctl enable --now docker
            sudo usermod -aG docker ubuntu

            cat <<EOT > playbook.yml
            ---
            - name: Setup Docker and Deploy Nginx
              hosts: localhost
              become: true
              tasks:
                - name: Pull Nginx Docker image
                  docker_image:
                    name: nginx
                    source: pull

                - name: Run Nginx Container
                  docker_container:
                    name: nginx_server
                    image: nginx
                    state: started
                    ports:
                      - "80:80"
            EOT

            ansible-playbook playbook.yml
          EOF
